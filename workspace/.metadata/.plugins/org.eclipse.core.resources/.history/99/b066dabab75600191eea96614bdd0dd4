/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/

#include "stm32f4xx.h"
#include "stm32f4xx_rcc.h"
#include "stm32f4xx_gpio.h"
#include "stm32f4xx_tim.h"
#include "misc.h"
#include "delay.h"
#include "clock.h"
#include "tm_stm32f4_disco.h"

int rcPWM1 = 150;
int rcPWM0 = 850;

int act_rcPWM1 = 0;
int act_rcPWM0 = 0;

int PMW1Done = 0;

void delay(int counter){
 int i;
 for (i = 0; i < counter * 10000; i++) {}
}



int main(void){
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE);

	//Config LED4
 	GPIO_InitTypeDef gpio14;
 	GPIO_StructInit(&gpio14);
 	gpio14.GPIO_Pin = GPIO_Pin_14;
 	gpio14.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_Init(GPIOG, &gpio14);
    GPIO_SetBits(GPIOG, GPIO_Pin_14);

    //CONFIG Pin G15
    GPIO_InitTypeDef gpio15;
    GPIO_StructInit(&gpio15);
    gpio15.GPIO_Pin = GPIO_Pin_15;
    gpio15.GPIO_Mode = GPIO_Mode_OUT;
    gpio15.GPIO_OType = GPIO_OType_PP;
    GPIO_Init(GPIOG, &gpio15);

    //CONFIG Pin G12
    GPIO_InitTypeDef gpio12;
    GPIO_StructInit(&gpio12);
    gpio12.GPIO_Pin = GPIO_Pin_12;
    gpio12.GPIO_Mode = GPIO_Mode_OUT;
    gpio12.GPIO_OType = GPIO_OType_PP;
    GPIO_Init(GPIOG, &gpio12);


    //INTERRUPT CONFIGS
    // Set clock to 168MHz
    CLOCK_SetClockTo168MHz();
    // Delay initialization
    DELAY_Init();
    // Timer interrupt initialization
    TIM2_INT_Init();
    // Clock for GPIOD
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE);
    // GPIOD initialization as an output for orange LED (GPIOD13)
    GPIO_InitTypeDef GPIO_InitStruct;
    GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
    GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
    GPIO_InitStruct.GPIO_Pin = GPIO_Pin_13;
    GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
    GPIO_InitStruct.GPIO_Speed = GPIO_Speed_2MHz;
    GPIO_Init(GPIOG, &GPIO_InitStruct);

    //BUTTON COFIGS
    //Enable clock for GPOIA
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);

    //Pin 0
    GPIO_InitStruct.GPIO_Pin = GPIO_Pin_0;
    //Mode output
    GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN;
    //Output type push-pull
    GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
    //With pull down resistor
    GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
    //100MHz pin speed
    GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;

    //Initialize pin on GPIOA port
    GPIO_Init(GPIOA, &GPIO_InitStruct);

    //Al principi fiquem els pins dels PWM a 0
    GPIO_ResetBits(GPIOG, GPIO_Pin_12);
    GPIO_ResetBits(GPIOG, GPIO_Pin_15);

    while (1){
    	//LEDS
    	//GPIO_ResetBits(GPIOG, GPIO_Pin_14); // LED4 OFF
    	//delay(300);
    	//GPIO_SetBits(GPIOG, GPIO_Pin_14); // LED4 ON
    	//delay(300);

    	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
    		GPIO_SetBits(GPIOG, GPIO_Pin_13);
    	} else {

    	}
 	}
}

}
